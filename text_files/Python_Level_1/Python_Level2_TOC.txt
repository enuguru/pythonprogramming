
Python Programming Level 2 - TOC
--------------------------------

Python regular expression
principles of regular expressions
learning regular expressions by using 
forming regular expressions
searching, matching and finding regular expression
re module in python

iterators and generators in python
how to create iterators
three ways of creating iterators

what are python decorators
purpose of a decorator
how was a decorator purpose done before
single level decorators
double decorators implementation
triple decorators and their implementation

python unit testing
procedures for doing python unit testing
abstract classes in python

solving complex problems in python
look and say numbers, roman to decimal, decimal to roman conversion,
excel encoding and decoding

building algorithms and data structures in python
simple stack, queue, binary search trees (bst), 
creating a heap, min heap, max heap
four types of algorithm problem solving in python
solving divide and conquer, dynamic programming, 
greedy algorithm and backtracking problems in python

named tuple and frozen set and array datatypes, type hints in python
dynamic typing, duck typing

important libraries in python
math, collections, itertools, functools

files, scripts, modules, libraries and packages in python
how to build modules, packages and libraries in python ?

how to read files, read csv files, read .json files and tsv files
csv and json module in python, how to do data inspection and
manipulation in python 	

exception handling in python - try catch and none

python GUI programming 

python design patterns
building structural, creational and behavioral DPs in python
differences of python design patterns with DPs in other languages
applications of python design patterns

multithreading in python
race condition - how to handle if racing occurs in python
locks and semaphores
producer consumer problem solved in python
thread creation on server side in python







